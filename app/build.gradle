apply plugin: 'com.android.application'
apply plugin: 'bugly' // 符号表的插件
apply plugin: 'org.greenrobot.greendao' //引入greendao插件

apply plugin: 'com.neenbedankt.android-apt'  //dagger2 插件 //apply plugin: 'android-apt'


bugly {
    appId = 'cb43e674d2'
    appKey = '6c0abcac-4ae8-4a86-bdd5-0485e1a34782'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.ronda.saleassist"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        externalNativeBuild {
            cmake {
                cppFlags ""

                // 设置支持的SO库架构
                abiFilters 'armeabi', 'x86', 'armeabi-v7a'//, 'x86_64', 'arm64-v8a'
            }
        }

        //也可以直接在cmake中配置
//        ndk {
//            // 设置支持的SO库架构
//            abiFilters 'armeabi', 'x86', 'armeabi-v7a'//, 'x86_64', 'arm64-v8a'
//        }
    }
    buildTypes {
        //在java代码中使用：BuildConfig.LOG_DEBUG
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 开启混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    //若libs中添加了.so文件的话，则需要这样配置
//    sourceSets {
//        main.jniLibs.srcDirs = ['libs']
//    }

    //Be sure to suppress this lint warning in your build.gradle
    lintOptions {
        disable 'InvalidPackage'
    }

    //解决这个冲突警告：Warning:Conflict with dependency 'com.google.code.findbugs:jsr305'. Resolved versions for app (3.0.1) and test app (2.0.1) differ. See http://g.co/androidstudio/app-test-app-conflict for details.
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}

greendao { // 相关配置
    schemaVersion 1  // schemaVersion 是必须要指定的
    //daoPackage 'com.greendao.gen'
    //targetGenDir 'src/main/java'
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':lib_rv_adapter')
    compile project(':lib_rv_adapter2')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // 要把单引号变成双引号
    //appcompat
    compile "com.android.support:appcompat-v7:${rootProject.ext.support}"
    //design
    compile "com.android.support:design:${rootProject.ext.support}"
    //recyclerview
    compile "com.android.support:recyclerview-v7:${rootProject.ext.support}"
    // cardview
    compile "com.android.support:cardview-v7:${rootProject.ext.support}"

//    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    //Bugly 自动更新(包含SDK) 和 NDK
    compile 'com.tencent.bugly:crashreport_upgrade:1.2.3'
    compile 'com.tencent.bugly:nativecrashreport:3.1.2'

    //Gson
    compile 'com.google.code.gson:gson:2.8.0'
    //butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    //annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1' // 注意这个不能再使用annotationProcessor前缀了，因为在本文件的顶部引入了android-apt插件，所以要换成apt，否则会导致butterKnife失效.(若直接使用annotationProcessor则不需要再顶部引入apt插件)
    apt 'com.jakewharton:butterknife-compiler:8.5.1'
    // circleimageview
    compile 'de.hdodenhof:circleimageview:2.1.0'
    //GreenDao
    compile 'org.greenrobot:greendao:3.2.0'
    //volley
    compile 'com.android.volley:volley:1.0.0'
    //Glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

//    //底部对话框
//    compile 'com.github.rubensousa:bottomsheetbuilder:1.3'
    //butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    //annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1' // 注意这个不能再使用annotationProcessor前缀了，因为在本文件的顶部引入了android-apt插件，所以要换成apt，否则会导致butterKnife失效
    apt 'com.jakewharton:butterknife-compiler:8.5.1'
//    //dagger 2
//    apt 'com.google.dagger:dagger-compiler:2.10'
//    compile 'com.google.dagger:dagger:2.10'
//    compile 'org.glassfish:javax.annotation:10.0-b28'
//    // RxJava 2
//    compile 'io.reactivex.rxjava2:rxjava:2.0.7'
//    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
//    compile 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
//    // Rxlifecycle
//    compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
//    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
//    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
//    //RxPermissions
//    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
//    // Retorfit 2
//    compile 'com.squareup.retrofit2:retrofit:2.2.0'
//    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
//    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
//    // compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0' --> 注意这个把Call转成Observable的适配器到现在还只是支持rxjava1.x, 以为它依赖的是rxjava1.2.0, 这是一个大坑。和我RxJava2.x的版本有冲突
//    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
//    // --> jakewharton 大神写的这个库可以支持到rxjava2.X
}
